NAME
    Data::Iterator::SlidingWindow - Iteration data with Sliding Window
    Algorithm

SYNOPSIS
      use Data::Iterator::SlidingWindow;
 
      my $ i = 0;
      my $iter = iterator 3 => sub{
          #generate/fetch next one.
          return if $i > 6;
          return $i++;
      };
 
      while(defined(my $cur = $iter->next())){
          # $cur is [1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]
      }

    And you can use <> oeprator.

        while(<$iter>){
            my $cur = $_;
            ....
        }

DESCRIPTION
    Data::Iterator::SlidingWindow is

METHODS
  iterator($window_size, $data_source)
    The arguments of iterator() are:

    $window_size
    $data_source

  next()
AUTHOR
    Hideaki Ohno <hide.o.j55{at}gmail.com>

SEE ALSO
LICENSE
    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

